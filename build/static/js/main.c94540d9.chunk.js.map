{"version":3,"sources":["components/Button.jsx","pages/NewDiary.jsx","actions.js","components/Calendar.jsx","pages/Home.jsx","pages/Detail.jsx","App.js","reducer.js","store.js","index.js"],"names":["ATag","styled","a","ContentWrapper","div","LeftBlockWrapper","RightBlockWrapper","DiaryWrapper","NewDiary","dispatch","useDispatch","history","useHistory","useState","isLoading","EditorState","createEmpty","editorState","setEditorState","console","log","currentYear","format","Date","currentMonth","currentDate","to","className","size","color","loading","wrapperClassName","editorClassName","toolbarClassName","toolbar","list","inDropdown","textAlign","link","placeholder","localization","locale","onEditorStateChange","onClick","contentState","getCurrentContent","originalDiaryText","convertToRaw","type","payload","newDiary","push","CalendarWrapper","CalendarHeader","CalendarBody","Calendar","date","setDate","showingYearInHeader","getYear","showingMonthInHeader","getMonth","weeksInHeaderMonth","getWeeksInMonth","dateRange","Array","fill","weekRagne","changedDate","subMonths","previousYear","previousMonth","addMonths","nextYear","nextMonth","map","item","week","nthWeek","dateIndex","increasingDays","nextDate","addDays","startOfWeek","processedDate","showingDate","todayYear","todayMonth","todayDate","getDate","todaySelector","pathname","state","year","month","HomeContainer","LinkContainer","Home","Detail","useSelector","location","useLocation","showingDiaryYear","showingDiaryMonth","showingDiaryDate","originDiaryText","JSON","parse","stringify","originContentState","convertFromRaw","originEditorState","createWithContent","readOnly","App","path","component","exact","initialState","reducers","setDiary","defaultReducer","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c94540d9.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst ATag = styled.a`\r\n  display: inline-flex;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 8px;\r\n  color: white;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  padding-left: 1rem;\r\n  padding-right: 1rem;\r\n  line-height : 35px;\r\n\r\n  height: 2.25rem;\r\n  font-size: 1rem;\r\n\r\n  background: #228be6;\r\n  &:hover {\r\n    background: #339af0;\r\n  }\r\n\r\n  &:active {\r\n    background: #1c7ed6;\r\n  }\r\n\r\n  & + & {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nexport default ATag;","import React, { useState } from 'react';\r\n\r\nimport format from 'date-fns/format';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport PacmanLoader from 'react-spinners/PacmanLoader';\r\n\r\nimport { Editor } from 'react-draft-wysiwyg';\r\n\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\n\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nimport ATag from '../components/Button';\r\n\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { setDiary } from '../actions';\r\n\r\n\r\nconst ContentWrapper = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n`;\r\n\r\nconst LeftBlockWrapper = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  width: 11.1%;\r\n`;\r\n\r\nconst RightBlockWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  background-color: #f0f2f5;\r\n  .loading_box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: fixed;\r\n    width: 90%;\r\n    height: 100%;\r\n    z-index: 100;\r\n    background-color: #081752;\r\n    opacity: 80%;\r\n  }\r\n  .loading_indicator {\r\n    display: flex;\r\n    width: 80%;\r\n    height: 300px;\r\n    margin-left: 80px;\r\n    margin-top: 200px;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .loading_text {\r\n    display: flex;\r\n    width: 30%;\r\n    height: 100px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-left: 550px;\r\n    font-size: 22px;\r\n    color: #E4D097;\r\n    letter-spacing: 4px;\r\n  }\r\n`;\r\n\r\nconst DiaryWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  height: 900px;\r\n  width: 50%;\r\n  background-color: #E9C46A;\r\n  border-radius: 10px;\r\n  .title_box {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n    width: 90%;\r\n    height: 60px;\r\n    margin-bottom: 70px;\r\n    border-left: 5px solid #fff1e6;\r\n    font-size: 31px;\r\n    letter-spacing: 2px;\r\n    color: #fff1e6;\r\n    border-top-right-radius: 10px;\r\n    border-bottom-right-radius: 10px;\r\n  }\r\n  .wrapper-class{\r\n    width: 95%;\r\n    margin: 0 auto;\r\n    margin-bottom: 20px;\r\n  }\r\n  .editor {\r\n    height: 450px !important;\r\n    padding: 20px !important;\r\n    margin-top: 50px;\r\n    border-radius: 10px !important;\r\n    background-color: #f3eddc;\r\n  }\r\n  .button {\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 20px;\r\n    letter-spacing: 8px;\r\n    padding: 20px;\r\n    width: 300px;\r\n    border: none;\r\n    border-bottom: 2px solid #E4D097;\r\n    outline: none;\r\n    background: none;\r\n    border-radius: 20px;\r\n    color: #E4D097;\r\n    &:hover {\r\n      background-color: #E4D097;\r\n      transition: all ease 0.2s;\r\n      color: #081752;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NewDiary = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n\r\n  console.log(editorState);\r\n\r\n  const currentYear = format(new Date(), 'yyyy');\r\n  const currentMonth = format(new Date(), 'MM');\r\n  const currentDate = format(new Date(), 'd');\r\n\r\n  // const todayDiary = {\r\n  //   creator: userData._id,\r\n  //   yearAndMonth: `${currentYear}-${currentMonth}`,\r\n  //   date: currentDate,\r\n  //   details: JSON.stringify(convertToRaw(contentState)),\r\n  //   fantasia_diary: ''\r\n  // };\r\n\r\n  const onEditorStateChange = editorState => {\r\n    setEditorState(editorState);\r\n  };\r\n\r\n  function handleRegister() {\r\n    let contentState = editorState.getCurrentContent();\r\n    let originalDiaryText = convertToRaw(contentState);\r\n    console.log(originalDiaryText);\r\n    dispatch(setDiary({ newDiary: originalDiaryText }));\r\n\r\n    history.push('/');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/\"><ATag>달력</ATag></Link>\r\n      <ContentWrapper>\r\n        <LeftBlockWrapper>\r\n        </LeftBlockWrapper>\r\n        <RightBlockWrapper >\r\n          {\r\n            isLoading &&\r\n            <div className='loading_box'>\r\n              <div className='loading_indicator'>\r\n                <PacmanLoader\r\n                  size={100}\r\n                  color={'#E4D097'}\r\n                  loading={isLoading}\r\n                />\r\n              </div>\r\n              <div className='loading_text'>\r\n                <span>😇 일기를 저장하고있어요 😇 </span>\r\n              </div>\r\n            </div>\r\n          }\r\n          <DiaryWrapper>\r\n            <div className='title_box'>\r\n              {currentYear}년 {currentMonth}월 {currentDate}일 일기장\r\n          </div>\r\n            <Editor\r\n              wrapperClassName='wrapper-class'\r\n              editorClassName='editor'\r\n              toolbarClassName='toolbar-class'\r\n              toolbar={{\r\n                list: { inDropdown: true },\r\n                textAlign: { inDropdown: true },\r\n                link: { inDropdown: true },\r\n                history: { inDropdown: false }\r\n              }}\r\n              placeholder='내용을 작성해주세요.'\r\n              localization={{\r\n                locale: 'ko'\r\n              }}\r\n              editorState={editorState}\r\n              onEditorStateChange={onEditorStateChange}\r\n            />\r\n            <ATag\r\n              onClick={handleRegister}\r\n            >일기 등록하기</ATag>\r\n          </DiaryWrapper>\r\n        </RightBlockWrapper>\r\n      </ContentWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewDiary;","export function setDiary({ newDiary }) {\r\n    return {\r\n      type: 'setDiary',\r\n      payload: { newDiary },\r\n    };\r\n  }\r\n  \r\n\r\n  ","import React, { useState } from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport {\r\n  format,\r\n  addDays,\r\n  addMonths,\r\n  getYear,\r\n  getMonth,\r\n  getDate,\r\n  getWeeksInMonth,\r\n  startOfWeek,\r\n  subMonths,\r\n} from 'date-fns';\r\n\r\nconst CalendarWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 800px;\r\n  height: 800px;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CalendarHeader = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100.3%;\r\n  height: 100px;\r\n  background-color: #264653;\r\n  border-top-left-radius: 50px;\r\n  border-top-right-radius: 50px;\r\n  button {\r\n    cursor: pointer;\r\n    outline: none;\r\n    background: transparent;\r\n    border: none;\r\n    font-size: 50px;\r\n    padding: 30px;\r\n    color: #E4D097;\r\n  }\r\n  .showingMonthAndYear_box {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 40px;\r\n    width: 300px;\r\n    height: 80px;\r\n    color: #E4D097;\r\n  }\r\n`;\r\n\r\nconst CalendarBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #f0f2f5;\r\n  border: 1px solid #081752;\r\n  .sevenDays_box {\r\n    display: flex;\r\n    flex-direction: row;\r\n    width: 100%;\r\n    height: 6%;\r\n  }\r\n  .dayOfWeek_box {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: calc(100% / 7);\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    background-color: #E4D097;\r\n    &:first-child {\r\n      color: red;\r\n    }\r\n    &:last-child {\r\n      color: royalblue;\r\n    }\r\n  }\r\n  .month_box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n  }\r\n  .week_box {\r\n    display: flex;\r\n    height: calc(100% / 6);\r\n  }\r\n  .date_box {\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: calc(100% /7);\r\n    border-radius: 50%;\r\n    margin: 10px;\r\n    font-size: 30px;\r\n    color: black;\r\n    &:hover {\r\n      background-color: #081752;\r\n      color: #f0f2f5;\r\n    }\r\n    &.different_month {\r\n      color: rgba(0, 0, 0, 0.3);\r\n    }\r\n    &.same_day {\r\n      border-radius :30%;\r\n      background-color: #E4D097;\r\n      &:hover {\r\n        border-radius: 50%;\r\n        background-color: #081752;\r\n        color: #f0f2f5;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Calendar = () => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const history = useHistory();\r\n\r\n  const sevenDays = ['SUNDAY', 'MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY'];\r\n\r\n  const showingYearInHeader = getYear(date);\r\n  const showingMonthInHeader = getMonth(date);\r\n  const weeksInHeaderMonth = getWeeksInMonth(date);\r\n\r\n  const dateRange = Array(7).fill(1);\r\n  const weekRagne = Array(weeksInHeaderMonth).fill(1);\r\n\r\n  const addMonth = () => {\r\n    const changedDate = addMonths(date, 1);\r\n\r\n    const nextYear = getYear(changedDate);\r\n    const nextMonth = getMonth(changedDate);\r\n\r\n    setDate(new Date(nextYear, nextMonth));\r\n  };\r\n\r\n  const minusMonth = () => {\r\n    const changedDate = subMonths(date, 1);\r\n\r\n    const previousYear = getYear(changedDate);\r\n    const previousMonth = getMonth(changedDate);\r\n\r\n    setDate(new Date(previousYear, previousMonth));\r\n  };\r\n\r\n  return (\r\n    <CalendarWrapper>\r\n      <CalendarHeader>\r\n        <button onClick={minusMonth}><MdChevronLeft /></button>\r\n        <div className='showingMonthAndYear_box'>\r\n          {format(date, 'MMMM yyyy')}\r\n        </div>\r\n        <button onClick={addMonth}>\r\n          <MdChevronRight />\r\n        </button>\r\n      </CalendarHeader>\r\n      <CalendarBody>\r\n        <div className='sevenDays_box'>\r\n          {\r\n            sevenDays.map(item => {\r\n              return (\r\n                <div className='dayOfWeek_box' key={item}>\r\n                  <span className='text'>{item}</span>\r\n                </div>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n        <div className='month_box'>\r\n          {\r\n            weekRagne.map((week, nthWeek) => {\r\n              return (\r\n                <div className='week_box' key={nthWeek}>\r\n                  {\r\n                    dateRange.map((date, dateIndex) => {\r\n                      let increasingDays = nthWeek * 7 + dateIndex;\r\n                      let nextDate = addDays(startOfWeek(new Date(showingYearInHeader, showingMonthInHeader)), increasingDays);\r\n                      let processedDate = format(nextDate, 'd');\r\n                      let currentMonth = getMonth(nextDate);\r\n                      let currentYear = getYear(nextDate);\r\n                      let showingDate = showingMonthInHeader === currentMonth ? `${processedDate}` : '';\r\n\r\n                      let todayYear = getYear(new Date());\r\n                      let todayMonth = getMonth(new Date());\r\n                      let todayDate = getDate(new Date());\r\n                      let todaySelector = format(nextDate, 'yyyy-MM-d') === format(new Date(todayYear, todayMonth, todayDate), 'yyyy-MM-d') ? 'same_day' : '';\r\n\r\n                      return (\r\n                        <div\r\n                          className={`date_box ${todaySelector}`}\r\n                          key={dateIndex}\r\n                          onClick={() => {\r\n                            history.push({\r\n                              pathname: `/detail`,\r\n                              state: {\r\n                                year: currentYear,\r\n                                month: currentMonth + 1,\r\n                                date: processedDate\r\n                              }\r\n                            });\r\n                          }}\r\n                        >\r\n                          <span className='text'>{showingDate}</span>\r\n                        </div>\r\n                      );\r\n                    })\r\n                  }\r\n                </div>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n      </CalendarBody>\r\n    </CalendarWrapper>\r\n  );\r\n};\r\n\r\nexport default Calendar;","import React from 'react';\r\n\r\nimport Calendar from '../components/Calendar';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport ATag from '../components/Button';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HomeContainer = styled.div`\r\n  display : flex;\r\n  flex-direction : column;\r\n  align-items : center;\r\n`;\r\n\r\nconst LinkContainer = styled.div`\r\n  padding-bottom : 10px;\r\n`;\r\n\r\nexport default function Home() {\r\n  return (\r\n    <HomeContainer>\r\n      <LinkContainer>\r\n        <Link to=\"/newDiary\"><ATag>일기 작성하기</ATag></Link>\r\n      </LinkContainer>\r\n      <Calendar />\r\n    </HomeContainer>\r\n  )\r\n  // happy, soso , bad, melancholy,\r\n  // 노란색, 회색, 빨간색, 파란색 #5442f5\r\n}\r\n","import React from 'react';\r\n\r\nimport { Editor, EditorState, convertFromRaw } from 'draft-js';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst ContentWrapper = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n`;\r\n\r\nconst RightBlockWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  .fantasiaDiary_box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 50%;\r\n    height: 100%;\r\n    justify-content: center;\r\n    .fantasiaDiary_title {\r\n      display: flex;\r\n      align-items: center;\r\n      padding: 20px;\r\n      margin-left: 100px;\r\n      margin-bottom: 50px;\r\n      width: 400px;\r\n      height: 50px;\r\n      border-left: 5px solid #081752;\r\n      font-size: 25px;\r\n      letter-spacing: 1px;\r\n    }\r\n    .fantasiaDiary_text {\r\n      display: flex;\r\n      width: 10%;\r\n      height: 10%;\r\n      background-color: #f3eddc;\r\n      padding: 20px;\r\n      margin-left: 100px;\r\n      margin-bottom: -140px;\r\n      border-radius: 10px;\r\n      width: 75%;\r\n      height: 50%;\r\n    }\r\n  }\r\n  .originalDiary_box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 50%;\r\n    height: 100%;\r\n    justify-content: center;\r\n    .originalDiary_title {\r\n      display: flex;\r\n      align-items: center;\r\n      padding: 20px;\r\n      margin-bottom: 50px;\r\n      width: 400px;\r\n      height: 50px;\r\n      border-left: 5px solid #cb0745;\r\n      font-size: 25px;\r\n      letter-spacing: 1px;\r\n      margin-left: 50px;\r\n    }\r\n    .originalDiary_text {\r\n      display: flex;\r\n      width: 10%;\r\n      height: 10%;\r\n      background-color: #f6f6f6;\r\n      padding: 20px;\r\n      margin-bottom: -140px;\r\n      border-radius: 10px;\r\n      width: 75%;\r\n      height: 50%;\r\n      margin-left: 50px;\r\n    }\r\n  }\r\n  .hide_box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 50%;\r\n    height: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #081752;\r\n  }\r\n  button {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    outline: none;\r\n    background: transparent;\r\n    border: 1px solid #E4D097;\r\n    width: 200px;\r\n    height: 50px;\r\n    letter-spacing: 6px;\r\n    font-size: 20px;\r\n    font-weight: 200;\r\n    border-radius: 10px;\r\n    z-index: 999;\r\n    color: #E4D097;\r\n    &:hover {\r\n      background-color: #E4D097;\r\n      color: #081752;\r\n      transition: all ease 0.2s;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Detail = () => {\r\n  const { newDiary } = useSelector((state) => ({\r\n    newDiary : state.newDiary,\r\n  }));\r\n\r\n  const location = useLocation();\r\n  const showingDiaryYear = location.state.year;\r\n  const showingDiaryMonth = location.state.month;\r\n  const showingDiaryDate = location.state.date;\r\n\r\n  const originDiaryText = JSON.parse(JSON.stringify(newDiary));\r\n\r\n  const originContentState = convertFromRaw(originDiaryText);\r\n  const originEditorState = EditorState.createWithContent(originContentState);\r\n\r\n  return (\r\n    <ContentWrapper>\r\n      <RightBlockWrapper>\r\n        <div className='originalDiary_box'>\r\n          <div className='originalDiary_title'>\r\n            {showingDiaryYear}년 {showingDiaryMonth}월 {showingDiaryDate}일 현실 일기\r\n            </div>\r\n          <div className='originalDiary_text'>\r\n            <Editor\r\n              editorState={originEditorState}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n        </div>\r\n      </RightBlockWrapper>\r\n    </ContentWrapper>\r\n  );\r\n};\r\n\r\nexport default Detail;","import NewDiary from './pages/NewDiary';\r\nimport Home from './pages/Home';\r\nimport Detail from './pages/Detail';\r\n\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <Switch>\r\n      <Route path=\"/newDiary\" component={NewDiary}/>\r\n      <Route path=\"/detail\" component={Detail}/>\r\n      <Route exact path=\"/\" component={Home}/>\r\n    </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initialState = {\r\n  newDiary : {},\r\n};\r\n\r\nconst reducers = {\r\n  setDiary(state, { payload: { newDiary } }) {\r\n    return {\r\n      ...state,\r\n      newDiary,\r\n    };\r\n  },\r\n};\r\n\r\nfunction defaultReducer(state) {\r\n  return state;\r\n}\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  return (reducers[action.type] || defaultReducer)(state, action);\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  ),\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}